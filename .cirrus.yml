---
# Default values to be merged into tasks:
auto_cancellation: false
env:
  PATH: /opt/conda/bin:$PATH
  COVERALLS_REPO_TOKEN: zVMEAj6vQZiEmwZOIKtZIcHU3JJOsBsi3
  PIP_CACHE: ${HOME}/.cache/pip
  CONDA_CACHE: /opt/conda/pkgs
  LC_ALL: C.UTF-8
  LANG: C.UTF-8
  # CIRRUS_SHELL: /bin/bash


linux_task:
  # use custom cloning since otherwise git tags are missing
  name: test (Linux - Anaconda)
  install_script:
    - apt-get install -y git
  clone_script: |
    if [ -z "$CIRRUS_PR" ]; then
      git clone --recursive --branch=$CIRRUS_BRANCH https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git $CIRRUS_WORKING_DIR
      git reset --hard $CIRRUS_CHANGE_IN_REPO
    else
      git clone --recursive https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git $CIRRUS_WORKING_DIR
      git fetch origin pull/$CIRRUS_PR/head:pull/$CIRRUS_PR
      git reset --hard $CIRRUS_CHANGE_IN_REPO
    fi
  container: {image: "continuumio/anaconda3:latest"}
  pip_cache:
    folder: $PIP_CACHE
  conda_cache:
    folder: $CONDA_CACHE
  info_script:
    - conda config --show
  prepare_script:
    - source /opt/conda/etc/profile.d/conda.sh
    - rm -rf .coverage junit-*.xml
    # ^  avoid information carried from one run to the other
    - conda env create -f environment.yaml -q  # install in root env
    - conda activate justcause
    - python setup.py develop
    - pre-commit install
  test_script:
    - source /opt/conda/etc/profile.d/conda.sh
    - conda activate justcause
    - conda list
    - python -c "import rpy2; print(rpy2.__path__)"
    - python -c "import rpy2.robjects"
    - echo "R_HOME" $R_HOME
    - py.test tests --color yes
    - pre-commit run --all-files
  coverage_script:
    - source /root/.bashrc
    - conda activate justcause
    - coverage combine .coverage
    - coveralls

